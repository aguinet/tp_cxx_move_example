                 public main
 main            proc near

 var_30          = byte ptr -30h
 var_28          = byte ptr -28h
 var_20          = byte ptr -20h

push    r15
push    r14
push    rbx
sub     rsp, 20h
lea     r15, [rsp+38h+var_20]
mov     esi, offset aHello ; "hello"
mov     rdi, r15
call    _ZN6StringC2EPKc ; String::String(char  const*)
mov     rdi, r15
call    _ZNK6String5c_strEv ; String::c_str(void)
mov     rcx, rax
mov     edi, offset format ; "s1: %x\n"
xor     eax, eax
mov     rsi, rcx
call    _printf
lea     r14, [rsp+38h+var_28]
mov     rdi, r14
mov     rsi, r15
call    _ZN6StringC2ERKS_ ; String::String(String const&)
mov     rdi, r14
call    _ZNK6String5c_strEv ; String::c_str(void)
mov     rcx, rax
mov     edi, offset aScopyX ; "scopy: %x\n"
xor     eax, eax
mov     rsi, rcx
call    _printf
mov     rdi, r15
call    _ZSt4moveIR6StringEONSt16remove_referenceIT_E4typeEOS3_
lea     rbx, [rsp+38h+var_30]
mov     rdi, rbx
mov     rsi, rax
call    _ZN6StringC2EOS_
mov     rdi, rbx
call    _ZNK6String5c_strEv ; String::c_str(void)
mov     rcx, rax
mov     edi, offset aSmoveX ; "smove: %x\n"
xor     eax, eax
mov     rsi, rcx
call    _printf
mov     rdi, r15
call    _ZNK6String5c_strEv ; String::c_str(void)
mov     rcx, rax
mov     edi, offset format ; "s1: %x\n"
xor     eax, eax
mov     rsi, rcx
call    _printf
mov     rdi, rbx
call    _ZN6StringD2Ev  ; String::~String()
mov     rdi, r14
call    _ZN6StringD2Ev  ; String::~String()
mov     rdi, r15
call    _ZN6StringD2Ev  ; String::~String()
xor     eax, eax
add     rsp, 20h
pop     rbx
pop     r14
pop     r15
retn
